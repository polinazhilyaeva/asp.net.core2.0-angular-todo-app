(function(){"use strict";angular.module("appTodoList",["elements","ngRoute","angularjs-datetime-picker","angularMoment"]).config(function(n,t){n.when("/",{controller:"todoListController",templateUrl:"/views/todoListView.html"});n.when("/edit/:todoId",{controller:"editTodoController",templateUrl:"/views/editTodoView.html"});n.when("/new",{controller:"newTodoController",templateUrl:"/views/newTodoView.html"});n.otherwise({redirectTo:"/"});t.hashPrefix("")})})(),function(){"use strict";function n(){return{require:"ngModel",restrict:"A",link:function(n,t,i,r){r.$validators.invalidDate=function(n){return moment(n,["DD/MM/YYYY HH:mm"]).isValid()}}}}angular.module("appTodoList").directive("invalidDate",n)}(),function(){"use strict";function n(){return{scope:{show:"=displayWhen"},templateUrl:"/views/loadingSpinner.html"}}function t(){return{templateUrl:"/views/deleteConfirmModal.html",controller:"deleteTodoController"}}angular.module("elements",[]).directive("loadingSpinner",n);angular.module("elements").directive("deleteConfirmModal",t)}(),function(){"use strict";angular.module("appTodoList").factory("todoList",function(){var n={list:[]};return n.get=function(){return n.list},n.set=function(t){n.list=t},n.addTodo=function(t){n.list.push(t)},n.removeTodo=function(t){n.list.splice(t,1)},n.setTodoAtIndex=function(t,i){n.list[i]=t},n})}(),function(){"use strict";angular.module("appTodoList").factory("todoItem",function(n){var t={index:null,properties:{id:null,name:null,priority:null,dueDateTime:null,comment:null},serverDatetimeFormat:"YYYY-MM-DD HH:mm:ss",clientDatetimeFormat:"DD/MM/YYYY HH:mm",priorityOptions:[{value:"1",name:"Low ★"},{value:"2",name:"Normal ★ ★"},{value:"3",name:"High ★ ★ ★"}]};return t.set=function(n,i){angular.copy(n,t.properties);t.index=i==="undefined"?null:i},t.reset=function(){t.properties={id:null,name:null,priority:null,dueDateTime:null,comment:null};t.index=null},t.getIndex=function(){return t.index},t.getProperties=function(){return t.properties},t.getPriorityOptions=function(){return t.priorityOptions},t.getDateFormattedForClient=function(i){var u=n().utcOffset(),r;return r=n(i,t.serverDatetimeFormat).add(u,"m"),r.format(t.clientDatetimeFormat)},t.getDateFormattedForServer=function(i){var u=n().utcOffset(),r;return r=n(i,t.clientDatetimeFormat).subtract(u,"m"),r.format(t.serverDatetimeFormat)},t})}(),function(){"use strict";function n(n,t,i,r,u,f){var e="YYYY-MM-DD HH:mm:ss",o="DD/MM/YYYY",s=r().utcOffset(),h=r().format(e);n.todoList=u.get();n.todoList.length==0&&(n.isBusy=!0,n.errorMessage="",t.get("/api/todos").then(function(t){angular.copy(t.data,n.todoList);u.set(n.todoList)},function(){n.errorMessage="Failed to load todo list from the server"}).finally(function(){n.isBusy=!1}));n.getDeadlineColor=function(n){var u=n.dueDateTime,t="red",i;return i=r(u,e).add(s,"m"),i.isSameOrAfter(h)&&(t="green"),t};n.getDeadline=function(n){var i=r().utcOffset(),t;return t=r(n.dueDateTime,e).add(i,"m"),t.format(o)};n.getArray=function(n){return new Array(parseInt(n))};n.viewTodo=function(n){f.set(n)};n.editTodo=function(n,t){f.set(n,t);i.path("/edit/"+n.id)};n.completeTodo=function(n,t){f.set(n,t)}}angular.module("appTodoList").controller("todoListController",n)}(),function(){"use strict";function n(n,t,i,r,u,f,e){n.priorityOptions=e.priorityOptions;n.addTodo=function(){var u=r().utcOffset(),e=r(n.newTodo.dueDateTime,"DD-MM-YYYY HH:mm"),o=e.add(u,"m").format("YYYY-MM-DD HH:mm"),s=new Date(o);n.newTodo.dueDateTime=s;n.newTodo.priority=n.priority;n.errorMessage="";t.post("/api/todos",n.newTodo).then(function(n){f.addTodo(n.data);i.path("#/")},function(){n.errorMessage="Failed to save a task to the server"})}}angular.module("appTodoList").controller("newTodoController",n)}(),function(){"use strict";function n(n,t,i,r,u,f,e){function s(){n.priorityOptions=e.getPriorityOptions();n.priority=n.todo.priority.toString();n.todo.dueDateTime=e.getDateFormattedForClient(n.todo.dueDateTime)}var h=e.getIndex(),o=e.getProperties();n.todo={};n.errorMessage="";n.isBusy=!0;n.updateTodo=function(){n.todo.dueDateTime=e.getDateFormattedForServer(n.todo.dueDateTime);n.todo.priority=n.priority;n.isBusy=!0;t.put("/api/todos/"+i.todoId,n.todo).then(function(){n.isBusy=!1;f.setTodoAtIndex(n.todo,h);r.path("#/")},function(){n.errorMessage="Failed to update a task on the server"}).finally(function(){n.isBusy=!1})};o.id!==null?(angular.copy(o,n.todo),e.reset(),s(),n.isBusy=!1):t.get("/api/todos/"+i.todoId).then(function(t){angular.copy(t.data,n.todo);s()},function(){n.errorMessage="Failed to load data from the server. Check the link and try again"}).finally(function(){n.isBusy=!1})}angular.module("appTodoList").controller("editTodoController",n)}(),function(){"use strict";function n(n,t,i,r){var u=r.getIndex(),f=r.getProperties().id;n.modalId="deleteTodoModal";r.reset();n.deleteTodo=function(){t.delete("/api/todos/"+f).then(function(){i.removeTodo(u)},function(){n.errorMessage="Failed to delete a task from the server"})}}angular.module("appTodoList").controller("deleteTodoController",n)}(),function(){"use strict";function n(n,t,i){var r=i.deleteTodoIndex,u=i.deleteTodoId,f=i.todoList;n.modalId="viewTodoModal";n.deleteTodo=function(){t.delete("/api/todos/"+u).then(function(){f.splice(r,1)},function(){n.errorMessage="Failed to delete a task from the server"})}}angular.module("appTodoList").controller("viewTodoController",n)}();